kind: Template
apiVersion: v1
metadata:
  annotations:
    description: The SonarQube OpenShift template
    tags: instant-app,sonarqube
  name: sonarqube
message: "Login to SonarQube with the default admin user: admin/admin"
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: sonarqube
    labels:
      app: sonarqube
  spec:
    ports:
    - name: sonarqube
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: sonarqube
      deploymentconfig: sonarqube
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for SonarQube's http service.
    name: sonarqube
    labels:
      app: sonarqube
  spec:
    to:
      kind: Service
      name: sonarqube
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: sonarqube
    name: sonarqube
  spec:
    tags:
    - annotations:
        description: The SonarQube Docker image
        tags: sonarqube
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/sonar/sonarqube:${SONARQUBE_VERSION}
      importPolicy: {}
      name: sonarqube
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: sonarqube
      deploymentconfig: sonarqube
    name: sonarqube
  spec:
    replicas: 1
    selector:
      app: sonarqube
      deploymentconfig: sonarqube
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.sonarqube.image.entrypoint: '["./bin/run.sh"]'
        creationTimestamp: null
        labels:
          app: sonarqube
          deploymentconfig: sonarqube
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_PASSWORD
            value: ${JDBC_PASSWORD}
          - name: SONARQUBE_JDBC_URL
            value: jdbc:sqlserver://${JDBC_URL}:1433;DatabaseName=${DATABASE_NAME}
          - name: SONARQUBE_JDBC_USERNAME
            value: ${JDBC_USERNAME}
          - name: SONAR_VERSION
            value: ${SONAR_VERSION}
          - name: SONARQUBE_HOME
            value: ${SONAR_HOME}
          image: ' '
          imagePullPolicy: IfNotPresent
          name: sonarqube
          ports:
          - containerPort: 9000
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              port: 9000
              path: /
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            httpGet:
              port: 9000
              path: /
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 800m
              memory: 1Gi
            limits:
              cpu: 2
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/sonarqube/
            name: sonarqube-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: false
        containerNames:
          - sonarqube
        from:
          kind: ImageStreamTag
          name: sonarqube
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: sonarqube-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${SONAR_VOLUME_CAPACITY}
parameters:
- displayName: SonarQube version
  value: "7.9"
  name: SONARQUBE_VERSION
  required: true
- displayName: SonarQube Database Username
  value: "user"
  name: JDBC_USERNAME
  required: true
- description: Password for SQL Server
  displayName: SonarQube's Database Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: JDBC_PASSWORD
  required: true
- displayName: SQL Server Address
  value: "127.0.0.1"
  name: JDBC_URL
  required: true
- displayName: SQL Server Dataase name
  value: "SonarQube"
  name: DATABASE_NAME
  required: true
- description: Volume space available for SonarQube
  displayName: SonarQube Volume Capacity
  name: SONAR_VOLUME_CAPACITY
  required: true
  value: 20Gi